// Generated by CoffeeScript 1.10.0
var Redir, baseUrl, mongoUri, mongoose, options, port, redirSchema, restify, server, shortid;

restify = require('restify');

shortid = require('shortid');

mongoose = require('mongoose');

mongoose.Promise = global.Promise;

port = process.env.PORT || 3000;

baseUrl = "http://localhost:" + port;

server = restify.createServer({
  name: 'URL Shortener'
});

server.use(restify.bodyParser());

redirSchema = new mongoose.Schema({
  shortUrl: String,
  url: String,
  createdAt: Date
});

Redir = mongoose.model('Redir', redirSchema);

mongoUri = process.env.MONGOURI || 'mongodb://localhost:27017/shortio';

options = {
  server: {
    socketOptions: {
      keepAlive: 300000,
      connectTimeoutMS: 30000
    }
  },
  replset: {
    socketOptions: {
      keepAlive: 300000,
      connectTimeoutMS: 30000
    }
  }
};

mongoose.connect(mongoUri, options);

server.get('/', restify.serveStatic({
  directory: 'views/',
  "default": 'index.html'
}));

server.get(/\/public\/?.*/, restify.serveStatic({
  directory: __dirname
}));

server.post('/new', function(req, res, next) {
  var newRedir, uniqueID;
  if (!require('validator').isURL(req.params.url)) {
    res.send({
      error: "Mistyped URL?"
    });
    return next();
  }
  uniqueID = shortid.generate();
  newRedir = new Redir({
    shortUrl: baseUrl + "/" + uniqueID,
    url: req.params.url,
    createdAt: new Date()
  });
  newRedir.save(function(err, redir) {
    return res.send(err != null ? err : redir);
  });
  return next();
});

server.get('/:hash', function(req, res, next) {
  var query;
  query = {
    'shortUrl': baseUrl + "/" + req.params.hash
  };
  return Redir.findOne(query, function(err, redir) {
    if (err) {
      return reply(err);
    }
    if (redir) {
      return res.redirect(redir.url, next);
    } else {
      return res.redirect("" + baseUrl, next);
    }
  });
});

mongoose.connection.on('error', console.error.bind(console, 'connection error:')).once('open', function() {
  server.listen(port);
  return console.log('%s listening at %s', server.name, server.url);
});
